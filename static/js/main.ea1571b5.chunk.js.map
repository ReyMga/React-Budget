{"version":3,"sources":["components/Error.jsx","components/Pregunta.jsx","components/Formulario.jsx","components/Listado.jsx","helpers.js","components/ControlPresupuesto.jsx","App.js","reportWebVitals.js","index.js"],"names":["Error","mensaje","className","Pregunta","setPresupuesto","setRestante","setMostrarPregunta","useState","cantidad","setCantidad","error","setError","onSubmit","e","preventDefault","isNaN","type","placeholder","step","onChange","Number","target","value","Formulario","setGasto","setCrearGasto","nombre","setNombre","trim","gasto","id","shortid","generate","htmlFor","Listado","gastos","map","revisarPresupuesto","presupuesto","restante","ControlPresupuesto","App","mostrarPregunta","setGastos","crearGasto","useEffect","presupuestoRestante","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea1571b5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Error = ({mensaje}) =>{\r\n    return(\r\n    <p className=\"alert alert-danger error\">{mensaje}</p>\r\n    );\r\n};\r\n\r\nexport default Error;","import {useState} from 'react';\r\nimport Error from './Error';\r\n\r\nconst Pregunta = ({setPresupuesto, setRestante, setMostrarPregunta}) =>{\r\n\r\n    // Creando estado para presupuesto\r\n    const [cantidad, setCantidad] = useState(0);\r\n    const [error, setError] = useState(false);\r\n\r\n    // Funcion para leer el Presupuesto\r\n    const definirPresupuesto = e =>{\r\n        setCantidad(Number(e.target.value));\r\n    }\r\n\r\n    //Funcion para definir el presupuesto\r\n    const agregarPresupuesto = e =>{\r\n        e.preventDefault();\r\n\r\n        //Validacion\r\n        if(cantidad < 1 || isNaN(cantidad)){\r\n            setError(true);\r\n            return;\r\n        }\r\n        //Si pasa la validaciÃ³n\r\n        setError(false); \r\n\r\n        //Actualizamos los estados de presupuesto y restante\r\n        setPresupuesto(cantidad);\r\n        setRestante(cantidad);\r\n        setMostrarPregunta(false);\r\n    }\r\n\r\n\r\n    return(\r\n        <div>\r\n            <h2>Insert your budget</h2>\r\n              {/* {error ? <Error mensaje=\"El presupuesto es incorrecto\" /> : null} */}\r\n              {error && <Error mensaje=\"The budget is wrong\" /> }\r\n            <form onSubmit={agregarPresupuesto}>\r\n                <input \r\n                    type=\"number\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Insert your budget\" \r\n                    step= \"0.01\"\r\n                    onChange={definirPresupuesto}\r\n                />\r\n\r\n                <input \r\n                    type=\"submit\"\r\n                    className=\"button-primary u-full-width\"\r\n                    value=\"Define Budget\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pregunta;","import {useState} from 'react';\r\nimport Error from './Error'\r\nimport shortid from 'shortid';\r\n\r\nconst Formulario = ({setGasto, setCrearGasto}) => {\r\n\r\n    const[nombre, setNombre] = useState('');\r\n    const[cantidad, setCantidad] = useState(0);\r\n    const[error,setError] = useState(false);\r\n\r\n    const agregarGasto = e =>{\r\n        e.preventDefault();\r\n\r\n        //Validar\r\n        if(cantidad < 1 || isNaN(cantidad) || nombre.trim() === ''){\r\n            setError(true);\r\n            return;\r\n        }\r\n        setError(false);\r\n\r\n        //construir gasto\r\n        const gasto = {\r\n            nombre,\r\n            cantidad: cantidad,\r\n            id: shortid.generate()\r\n        }\r\n\r\n        //Pasar el gasto al componente App.js\r\n        setGasto(gasto);\r\n        setCrearGasto(true);\r\n\r\n        //Limpiar los inputs\r\n        setNombre('');\r\n        setCantidad('');\r\n    }\r\n\r\n    return (\r\n        <form \r\n            onSubmit={agregarGasto}>\r\n            <h2>Add your expenses here</h2>\r\n            {error && <Error mensaje=\"Ambos campos son obligatorios o gasto incorrecto\" /> }\r\n            <div className=\"campo\">\r\n                <label htmlFor=\"gasto\">Name Expense</label>\r\n                <input \r\n                    type=\"text\" \r\n                    id=\"gasto\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Ej. Transporte\" \r\n                    value={nombre}\r\n                    onChange={e => setNombre(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"campo\">\r\n                <label htmlFor=\"cantidad-gasto\">Amount Expense</label>\r\n                <input \r\n                    type=\"number\"\r\n                    id=\"cantidad-gasto\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Ej. 300\"\r\n                    step=\"0.01\"\r\n                    value={cantidad}\r\n                    onChange={e => setCantidad(Number(e.target.value))}\r\n                />\r\n            </div>\r\n            <input \r\n                type=\"submit\"\r\n                className=\"button-primary u-full-width\"\r\n                value=\"Add Expense\" />\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Formulario;","import React from 'react';\r\n\r\nconst Listado = ({gastos}) => {\r\n    return (\r\n        <div className=\"gastos-realizados\">\r\n            <h2>List</h2>\r\n            {gastos.map(gasto => (\r\n                <li key={gasto.id} className=\"gastos\">\r\n                    <p>\r\n                        {gasto.nombre}    \r\n                    <span className=\"gasto\">${gasto.cantidad}</span>\r\n                    </p>\r\n                </li>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Listado;","\r\nexport const revisarPresupuesto = (presupuesto, restante) =>{\r\n    let clase;\r\n\r\n    if((presupuesto / 4) > restante){\r\n        clase= 'alert alert-danger'\r\n    } else if((presupuesto / 2 ) > restante){\r\n        clase= 'alert alert-warning'\r\n    }else {\r\n        clase= 'alert alert-sucess'\r\n    }\r\n    return clase;\r\n}\r\n\r\n","import React from 'react';\r\nimport {revisarPresupuesto} from '../helpers';\r\n\r\nconst ControlPresupuesto = ({presupuesto, restante}) => {\r\n  return (\r\n    <div>\r\n      <div className=\"alert alert-primary\">\r\n        Budget: ${presupuesto}\r\n      </div>\r\n      <div className={revisarPresupuesto}>\r\n        Leftover: ${restante}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ControlPresupuesto;","import {useState, useEffect} from 'react';\r\nimport Pregunta from './components/Pregunta';\r\nimport Formulario from './components/Formulario';\r\nimport Listado from './components/Listado';\r\nimport ControlPresupuesto from './components/ControlPresupuesto'\r\n\r\n\r\nconst App = () =>  {\r\n\r\n  const [presupuesto, setPresupuesto] = useState(0);\r\n  const [restante, setRestante] = useState(0);\r\n\r\n  //Estado para saber que componente mostrar\r\n  const[mostrarPregunta, setMostrarPregunta] = useState(true);\r\n\r\n  //Estado para generar los gastos\r\n  const [gastos, setGastos] = useState([]);\r\n  const [gasto, setGasto] = useState({});\r\n  const [crearGasto, setCrearGasto] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if(crearGasto){\r\n      //Agregamos nuevo presupuesto\r\n      setGastos([\r\n        ...gastos,\r\n       gasto\r\n      ])\r\n      //Resta de presupuesto\r\n      const presupuestoRestante = restante - gasto.cantidad;\r\n      setRestante(presupuestoRestante);\r\n    }\r\n    setCrearGasto(false)\r\n  },[gasto])\r\n\r\n  // const agregarNuevoGasto = gasto =>\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header>\r\n        <h1>Expense Control</h1>\r\n      </header>\r\n      <div className=\"contenido-principal contenido\">\r\n        {mostrarPregunta ? (\r\n          <Pregunta\r\n          setPresupuesto={setPresupuesto}\r\n          setRestante={setRestante} \r\n          setMostrarPregunta={setMostrarPregunta} />\r\n        ) : (\r\n          <div className=\"row\">\r\n          <div className=\"one-half column\">\r\n            <Formulario \r\n              setGasto={setGasto} \r\n              setCrearGasto={setCrearGasto}\r\n            />\r\n          </div>\r\n          <div className=\"one-half column\">\r\n            <Listado \r\n              gastos={gastos}\r\n            />\r\n            <ControlPresupuesto \r\n              presupuesto={presupuesto}\r\n              restante={restante}\r\n            />\r\n          </div>\r\n        </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}